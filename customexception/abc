package jdbc;
 
import java.sql.*;
 

public class JdbcEx {
 
    public static void main(String[] args) {


        //step 1: register Driver class with DriverManager

        try
        {
    //    Class.forName("com.mysql.jdbc.Driver"); //deprecated
        Class.forName("com.mysql.cj.jdbc.Driver");
        }
        catch(ClassNotFoundException e)
        {
            e.printStackTrace();
        }

        //step 2: ask SQL Connection from Driver Manager class, providing connction url,username,password
        try(Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/restapi","root","namrata");)
        {


            //step 3: get statement object from Connection
              Statement st = con.createStatement();


              //step 4: fire/execute query on Statement object and collect the ResultSet object 
              ResultSet rs = st.executeQuery("Select studid,studname,studsurname from student1");

            //step 5: Iterate through the ResultSet top fetch the rows  
              while(rs.next())
              {
                  //step 6: Use Resultset- getxxxx(column no) tpo fetch particular column value
                  int id = rs.getInt(1);

                  String name = rs.getString(2);

                  String surname = rs.getString(3);

                  System.out.println("id="+id+", name="+name+", surname="+surname);
              }

              rs.close();
              st.close();

              //step 6: connection is auto closed as u r using try with resource.
        }
        catch(SQLException e)
        {
            e.printStackTrace();
        }


 
    }
 
}







CREATE DATABASE restapi;
USE restapi;
show tables;
select * from student1;
create table student1 (studid int,studname varchar(30),studsurname varchar(30));
insert into student1 values(1,'Namrata','Marathe');
insert into student1 values(2,'Arjun','Marathe');
insert into student1 values(3,'Rahul','Marathe');
commit;




<settings xmlns="http://maven.apache.org/POM/4.0.0"xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
  http://maven.apache.org/xsd/settings-1.0.0.xsd"><localRepository>
    C:/Documents and Settings/Administrator/.m2/repository
  </localRepository><interactiveMode>true</interactiveMode><usePluginRegistry>false</usePluginRegistry><offline>false</offline></settings>
  
  
  
  
  
  
  <plugin>
<artifactId>maven-jar-plugin</artifactId>
<version>3.0.2</version>
<configuration>
<outputDirectory>c://tempjar</outputDirectory>
<finalName>myprojcompile</finalName>
<attach>false</attach>
</configuration>
</plugin>

<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-source-plugin</artifactId>
<executions>
<execution>
<id>attach-sources</id>
<goals>
<goal>jar</goal>
</goals>
</execution>

</executions>
<configuration>
<outputDirectory>c://tempjar</outputDirectory>
<finalName>myproj</finalName>
<attach>false</attach>
</configuration>
</plugin>







1) compile your java source code files to
   .class file and create a jar frm it
 
  mvn compile   (java -> class compile)

  mvn jar:jar   ( compiled java .class file - jar)

2) compile your test source code files to .class files
   and create test jar out of it
 
  mvn test-compile (test -> test.class compile test files)

  mvn jar:test-jar (compiled test class filesb - jar)
 

3) create a jar out of src/java source code files 
 
   mvn source:jar   (java source code -jar)
 
4) create a test-jar out of src/test source code files
 
   mvn source:test-jar (test source code - jar)
